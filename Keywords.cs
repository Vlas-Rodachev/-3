using System.Collections.Generic;
namespace Компилятор
{
    class Keywords
    {
        public static Dictionary<string, byte> Kw = new Dictionary<string, byte>()  //Словарь кодов символьных констант
        {
            ["*"] = LexicalAnalyzer.star,
            ["/"] = LexicalAnalyzer.slash,
            ["="] = LexicalAnalyzer.equal,
            [","] = LexicalAnalyzer.comma,
            [";"] = LexicalAnalyzer.semicolon,
            [": "] = LexicalAnalyzer.colon,
            ["."] = LexicalAnalyzer.point,
            ["^"] = LexicalAnalyzer.arrow,
            ["("] = LexicalAnalyzer.leftpar,
            [")"] = LexicalAnalyzer.rightpar,
            ["["] = LexicalAnalyzer.lbracket,
            ["]"] = LexicalAnalyzer.rbracket,
            ["{"] = LexicalAnalyzer.flpar,
            ["}"] = LexicalAnalyzer.frpar,
            ["<"] = LexicalAnalyzer.later,
            [">"] = LexicalAnalyzer.greater,
            ["<="] = LexicalAnalyzer.laterequal,
            ["=>"] = LexicalAnalyzer.greaterequal,
            ["<>"] = LexicalAnalyzer.latergreater,
            ["+"] = LexicalAnalyzer.plus,
            ["-"] = LexicalAnalyzer.minus,
            ["(*"] = LexicalAnalyzer.lcomment,
            ["'"] = LexicalAnalyzer.quote,
            ["*)"] = LexicalAnalyzer.lcomment,
            [":="] = LexicalAnalyzer.assign,
            [".."] = LexicalAnalyzer.twopoints,
            ["do"] = LexicalAnalyzer.dosy,
            ["if"] = LexicalAnalyzer.ifsy,
            ["in"] = LexicalAnalyzer.insy,
            ["of"] = LexicalAnalyzer.ofsy,
            ["or"] = LexicalAnalyzer.orsy,
            ["to"] = LexicalAnalyzer.tosy,
            ["end"] = LexicalAnalyzer.endsy,
            ["var"] = LexicalAnalyzer.varsy,
            ["div"] = LexicalAnalyzer.divsy,
            ["and"] = LexicalAnalyzer.andsy,
            ["not"] = LexicalAnalyzer.notsy,
            ["for"] = LexicalAnalyzer.forsy,
            ["mod"] = LexicalAnalyzer.modsy,
            ["nil"] = LexicalAnalyzer.nilsy,
            ["set"] = LexicalAnalyzer.setsy,
            ["then"] = LexicalAnalyzer.thensy,
            ["else"] = LexicalAnalyzer.elsesy,
            ["case"] = LexicalAnalyzer.casesy,
            ["file"] = LexicalAnalyzer.filesy,
            ["goto"] = LexicalAnalyzer.gotosy,
            ["type"] = LexicalAnalyzer.typesy,
            ["with"] = LexicalAnalyzer.withsy,
            ["begin"] = LexicalAnalyzer.beginsy,
            ["while"] = LexicalAnalyzer.whilesy,
            ["array"] = LexicalAnalyzer.arraysy,
            ["const"] = LexicalAnalyzer.constsy,
            ["label"] = LexicalAnalyzer.labelsy,
            ["until"] = LexicalAnalyzer.untilsy,
            ["downto"] = LexicalAnalyzer.downtosy,
            ["packed"] = LexicalAnalyzer.packedsy,
            ["record"] = LexicalAnalyzer.recordsy,
            ["repeat"] = LexicalAnalyzer.repeatsy,
            ["program"] = LexicalAnalyzer.programsy,
            ["function"] = LexicalAnalyzer.functionsy,
            ["procedure"] = LexicalAnalyzer.procedurensy,
            ["write"] = LexicalAnalyzer.write,
            ["writeln"] = LexicalAnalyzer.writeln,
            ["read"] = LexicalAnalyzer.read,
            ["readln"] = LexicalAnalyzer.readln,
        };
    }
}